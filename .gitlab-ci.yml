variables:
  DOCKER_TLS_CERTDIR: ''

image: node:12

cache: &global_cache
  paths:
    - node_modules/
  policy: pull-push

.install_packages: &install_packages
  - |
    if [[ ! -d "node_modules" ]]; then
        yarn install --network-timeout 1000000
    fi

stages:
  - build:image
  - setup
  - deploy

.swpc-runner:
  tags:
    - aws
    - m4-large

default:
  tags:
    - aws
    - m4-large

build:image:
  stage: build:image
  image: docker:19.03.8
  services:
    - docker:19.03.8-dind
  only:
    refs:
      - master
    changes:
      - Dockerfile
  before_script:
    - echo "$SSOT_USER_TOKEN" | docker login -u $SSOT_USER_NAME --password-stdin $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  cache: {}
  dependencies: []

setup:
  stage: setup
  only:
    refs:
      - master
    changes:
      - package.json
      - yarn.lock
  script:
    - yarn install --network-timeout 1000000
  dependencies: []

deploy:
  stage: deploy
  only:
    - master
  before_script:
    - *install_packages
    - git config --global user.email leo_jhuo@wistron.com
    - git config --global user.name eco-ssot-frontend-ci
    - git remote add github https://$GITHUB_API_KEY@github.com/eco-ssot/eco-ssot.github.io.git
  script:
    - yarn deploy
  when: on_success
  dependencies: []
